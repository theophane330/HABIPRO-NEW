# Generated by Django 5.2.7 on 2025-10-08 21:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend_app', '0005_delete_propriete'),
    ]

    operations = [
        migrations.CreateModel(
            name='Propriete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text='Titre descriptif de la propriété', max_length=200, verbose_name='Titre de la propriété')),
                ('description', models.TextField(blank=True, help_text='Description détaillée de la propriété', null=True, verbose_name='Description')),
                ('adresse', models.CharField(help_text='Adresse complète de la propriété', max_length=300, verbose_name='Adresse complète')),
                ('quartier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Quartier')),
                ('commune', models.CharField(blank=True, max_length=100, null=True, verbose_name='Commune')),
                ('ville', models.CharField(default='Abidjan', max_length=100, verbose_name='Ville')),
                ('prix_mensuel', models.DecimalField(decimal_places=2, help_text='Loyer mensuel en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix mensuel (FCFA)')),
                ('prix_vente', models.DecimalField(blank=True, decimal_places=2, help_text='Prix de vente en FCFA (si applicable)', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix de vente (FCFA)')),
                ('caution', models.DecimalField(blank=True, decimal_places=2, help_text='Montant de la caution', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Caution (FCFA)')),
                ('charges', models.DecimalField(decimal_places=2, default=0, help_text='Charges mensuelles (eau, électricité, etc.)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Charges mensuelles (FCFA)')),
                ('type_propriete', models.CharField(choices=[('villa', 'Villa'), ('studio', 'Studio'), ('appartement', 'Appartement'), ('duplex', 'Duplex'), ('maison', 'Maison'), ('terrain', 'Terrain'), ('bureau', 'Bureau'), ('commerce', 'Commerce')], max_length=20, verbose_name='Type de propriété')),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('loue', 'Loué'), ('en_vente', 'En vente'), ('en_travaux', 'En travaux'), ('reserve', 'Réservé')], default='disponible', max_length=20, verbose_name='Statut de la propriété')),
                ('nombre_chambres', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nombre de chambres')),
                ('nombre_salles_bain', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nombre de salles de bain')),
                ('superficie', models.DecimalField(decimal_places=2, help_text='Superficie en mètres carrés', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Superficie (m²)')),
                ('nombre_etages', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name="Nombre d'étages")),
                ('etage', models.PositiveIntegerField(blank=True, help_text='Étage où se trouve la propriété (pour appartements)', null=True, verbose_name='Étage')),
                ('meuble', models.BooleanField(default=False, verbose_name='Meublé')),
                ('climatise', models.BooleanField(default=False, verbose_name='Climatisé')),
                ('parking', models.BooleanField(default=False, verbose_name='Parking disponible')),
                ('nombre_places_parking', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Nombre de places de parking')),
                ('jardin', models.BooleanField(default=False, verbose_name='Jardin')),
                ('piscine', models.BooleanField(default=False, verbose_name='Piscine')),
                ('balcon', models.BooleanField(default=False, verbose_name='Balcon')),
                ('terrasse', models.BooleanField(default=False, verbose_name='Terrasse')),
                ('ascenseur', models.BooleanField(default=False, verbose_name='Ascenseur')),
                ('gardien', models.BooleanField(default=False, verbose_name='Gardien/Sécurité')),
                ('locataire_actuel', models.CharField(blank=True, max_length=200, null=True, verbose_name='Locataire actuel')),
                ('date_debut_location', models.DateField(blank=True, null=True, verbose_name='Date de début de location')),
                ('date_fin_location', models.DateField(blank=True, null=True, verbose_name='Date de fin de location')),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='proprietes/images/', verbose_name='Image principale')),
                ('date_ajout', models.DateField(default=django.utils.timezone.now, verbose_name="Date d'ajout")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('est_active', models.BooleanField(default=True, verbose_name='Propriété active')),
                ('notes', models.TextField(blank=True, help_text='Notes privées sur la propriété', null=True, verbose_name='Notes internes')),
            ],
            options={
                'verbose_name': 'Propriété',
                'verbose_name_plural': 'Propriétés',
                'ordering': ['-date_ajout'],
                'indexes': [models.Index(fields=['statut', 'type_propriete'], name='backend_app_statut_ddd135_idx'), models.Index(fields=['ville', 'quartier'], name='backend_app_ville_8bd873_idx'), models.Index(fields=['-date_ajout'], name='backend_app_date_aj_fc0ed4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ImagePropriete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='proprietes/images/', verbose_name='Image')),
                ('legende', models.CharField(blank=True, max_length=200, null=True, verbose_name='Légende')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('date_ajout', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('propriete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='backend_app.propriete', verbose_name='Propriété')),
            ],
            options={
                'verbose_name': 'Image de propriété',
                'verbose_name_plural': 'Images de propriétés',
                'ordering': ['ordre', '-date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='DocumentPropriete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre du document')),
                ('type_document', models.CharField(choices=[('titre_foncier', 'Titre foncier'), ('contrat', 'Contrat de location'), ('facture', 'Facture'), ('plan', 'Plan'), ('attestation', 'Attestation'), ('autre', 'Autre')], max_length=20, verbose_name='Type de document')),
                ('fichier', models.FileField(upload_to='proprietes/documents/', verbose_name='Fichier')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('date_ajout', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('propriete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='backend_app.propriete', verbose_name='Propriété')),
            ],
            options={
                'verbose_name': 'Document de propriété',
                'verbose_name_plural': 'Documents de propriétés',
                'ordering': ['-date_ajout'],
            },
        ),
    ]
