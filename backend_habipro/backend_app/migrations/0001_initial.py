# Generated by Django 5.2.7 on 2025-10-19 20:47

import backend_app.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre du document')),
                ('category', models.CharField(choices=[('contracts', 'Contrats de bail'), ('inventory', 'États des lieux'), ('receipts', 'Quittances'), ('insurance', 'Assurances')], max_length=50, verbose_name='Catégorie')),
                ('type', models.CharField(max_length=100, verbose_name='Type de document')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('content', models.TextField(blank=True, verbose_name='Contenu/Extrait')),
                ('file', models.FileField(upload_to=backend_app.models.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Fichier PDF')),
                ('size', models.CharField(blank=True, max_length=20, verbose_name='Taille du fichier')),
                ('pages', models.IntegerField(default=1, verbose_name='Nombre de pages')),
                ('tenant', models.CharField(max_length=255, verbose_name='Locataire')),
                ('property', models.CharField(max_length=255, verbose_name='Propriété')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('completed', 'Terminé'), ('issued', 'Émis'), ('valid', 'Valide'), ('signed', 'Signé')], default='active', max_length=50, verbose_name='Statut')),
                ('date', models.DateField(verbose_name='Date du document')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'documents',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre')),
                ('adresse', models.CharField(max_length=300, verbose_name='Adresse')),
                ('prix', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix')),
                ('type', models.CharField(choices=[('Villa', 'Villa'), ('Studio', 'Studio'), ('Appartement', 'Appartement'), ('Duplex', 'Duplex')], max_length=50, verbose_name='Type')),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('loué', 'Loué'), ('en_vente', 'En vente')], default='disponible', max_length=20, verbose_name='Statut')),
                ('locataire', models.CharField(blank=True, max_length=200, null=True, verbose_name='Locataire')),
                ('chambres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Chambres')),
                ('salles_de_bain', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Salles de bain')),
                ('superficie', models.CharField(max_length=50, verbose_name='Superficie')),
                ('date_ajout', models.DateField(auto_now_add=True, verbose_name="Date d'ajout")),
            ],
            options={
                'verbose_name': 'Propriété',
                'verbose_name_plural': 'Propriétés',
                'ordering': ['-date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('role', models.CharField(choices=[('proprietaire', 'Propriétaire'), ('locataire', 'Locataire')], default='locataire', max_length=20, verbose_name='Rôle')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superutilisateur')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'inscription")),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Dernière connexion')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='PropertyMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=200, upload_to=backend_app.models.property_media_path, verbose_name='Fichier')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Vidéo')], max_length=10, verbose_name='Type de média')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Média principal')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medias', to='backend_app.property', verbose_name='Propriété')),
            ],
            options={
                'verbose_name': 'Média de propriété',
                'verbose_name_plural': 'Médias de propriété',
                'ordering': ['order', '-uploaded_at'],
            },
        ),
    ]
